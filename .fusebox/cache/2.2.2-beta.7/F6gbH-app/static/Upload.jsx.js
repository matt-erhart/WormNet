module.exports = { contents: "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar index_1 = require(\"./index\");\r\nvar uid = require(\"uid-safe\");\r\nvar file_upload_1 = require(\"material-ui/svg-icons/file/file-upload\");\r\nvar FlatButton_1 = require(\"material-ui/FlatButton\");\r\nvar Upload = (function (_super) {\r\n    __extends(Upload, _super);\r\n    function Upload() {\r\n        var _this = _super.call(this) || this;\r\n        _this.state = { progress: 0 };\r\n        return _this;\r\n    }\r\n    Upload.prototype.handleUpload = function (e) {\r\n        var _this = this;\r\n        var file = e.nativeEvent.target.files[0];\r\n        var fileName = file.name.replace(\".json\", \"_\" + Date.now() + \".json\");\r\n        var task = index_1.storage.ref(\"data/\" + fileName).put(file);\r\n        task.on(\"state_changed\", function (snap) {\r\n            if (snap.state === 'running') {\r\n                var progress = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n                _this.setState({ progress: Math.round(progress) });\r\n            }\r\n        }, function (err) {\r\n            console.log(err);\r\n        }, function () {\r\n            index_1.database.ref().child(\"json_files\").push({ fileName: fileName });\r\n            _this.setState({ progress: 0 });\r\n        });\r\n    };\r\n    Upload.prototype.render = function () {\r\n        var _this = this;\r\n        var progress = this.state.progress;\r\n        return (React.createElement(FlatButton_1.default, { label: progress > 0 ? progress + \"%\" : \"Upload JSON\", containerElement: \"label\", icon: React.createElement(file_upload_1.default, null) },\r\n            React.createElement(\"input\", { type: \"file\", onChange: function (e) { return _this.handleUpload(e); }, style: {\r\n                    cursor: \"pointer\",\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    opacity: 0\r\n                } })));\r\n    };\r\n    return Upload;\r\n}(React.Component));\r\nexports.Upload = Upload;\r\n//# sourceMappingURL=Upload.js.map",
dependencies: ["react","./index","uid-safe","material-ui/svg-icons/file/file-upload","material-ui/FlatButton"],
sourceMap: "{\"version\":3,\"file\":\"Upload.jsx\",\"sourceRoot\":\"\",\"sources\":[\"/src/Upload.tsx\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;AAEA,6BAA+B;AAK/B,iCAA4C;AAC5C,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9B,sEAAgE;AAEhE,qDAAgD;AAEhD;IAA4B,0BAAyB;IACnD;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,KAAK,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;;IAC/B,CAAC;IAED,6BAAY,GAAZ,UAAa,CAAC;QAAd,iBAsBC;QArBC,IAAM,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;QACxE,IAAM,IAAI,GAAG,eAAO,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEvD,IAAI,CAAC,EAAE,CACL,eAAe,EACd,UAAC,IAAI;YAEJ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC7B,IAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;gBAC/D,KAAI,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAA;YACjD,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD;YACE,gBAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAChE,KAAI,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,CAAC,EAAC,CAAC,CAAA;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uBAAM,GAAN;QAAA,iBAuBC;QAtBQ,IAAA,8BAAQ,CAAe;QAC9B,MAAM,CAAC,CACL,oBAAC,oBAAU,IAAC,KAAK,EAAE,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,GAAG,GAAG,aAAa,EAChE,gBAAgB,EAAC,OAAO,EAAC,IAAI,EAAE,oBAAC,qBAAU,OAAG;YAE3C,+BACE,IAAI,EAAC,MAAM,EACX,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAApB,CAAoB,EACnC,KAAK,EAAE;oBACL,MAAM,EAAE,SAAS;oBACjB,QAAQ,EAAE,UAAU;oBACpB,GAAG,EAAE,CAAC;oBACN,MAAM,EAAE,CAAC;oBACT,KAAK,EAAE,CAAC;oBACR,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,MAAM;oBACb,OAAO,EAAE,CAAC;iBACX,GACD,CAES,CACd,CAAC;IACJ,CAAC;IACH,aAAC;AAAD,CAAC,AAtDD,CAA4B,KAAK,CAAC,SAAS,GAsD1C;AAtDY,wBAAM\",\"sourcesContent\":[\"import Slider from \\\"material-ui/Slider\\\";\\r\\nimport IconButton from \\\"material-ui/IconButton\\\";\\r\\nimport * as React from \\\"react\\\";\\r\\nimport PlayArrow from \\\"material-ui/svg-icons/av/play-arrow\\\";\\r\\nimport Pause from \\\"material-ui/svg-icons/av/pause\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { colors } from \\\"./constants\\\";\\r\\nimport { storage, database } from \\\"./index\\\";\\r\\nvar uid = require(\\\"uid-safe\\\");\\r\\nimport FileUpload from \\\"material-ui/svg-icons/file/file-upload\\\";\\r\\nimport RaisedButton from 'material-ui/RaisedButton';\\r\\nimport FlatButton from 'material-ui/FlatButton';\\r\\n\\r\\nexport class Upload extends React.Component<any, any> {\\r\\n  constructor() {\\r\\n    super();\\r\\n    this.state = { progress: 0 };\\r\\n  }\\r\\n\\r\\n  handleUpload(e) {\\r\\n    const file = e.nativeEvent.target.files[0];\\r\\n    const fileName = file.name.replace(\\\".json\\\", \\\"_\\\" + Date.now() + \\\".json\\\");\\r\\n    const task = storage.ref(\\\"data/\\\" + fileName).put(file);\\r\\n\\r\\n    task.on(\\r\\n      \\\"state_changed\\\",\\r\\n       (snap) => {\\r\\n\\r\\n        if (snap.state === 'running') {\\r\\n          const progress = (snap.bytesTransferred/snap.totalBytes) * 100;\\r\\n          this.setState({progress: Math.round(progress)})\\r\\n        } \\r\\n      },\\r\\n      (err) => {\\r\\n        console.log(err);\\r\\n      },\\r\\n      () => {\\r\\n        database.ref().child(\\\"json_files\\\").push({ fileName: fileName });\\r\\n        this.setState({progress: 0})\\r\\n      }\\r\\n    );\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    const {progress} = this.state;\\r\\n    return (\\r\\n      <FlatButton label={progress > 0 ? progress + \\\"%\\\" : \\\"Upload JSON\\\" }\\r\\n      containerElement=\\\"label\\\" icon={<FileUpload />  }>\\r\\n\\r\\n        <input\\r\\n          type=\\\"file\\\"\\r\\n          onChange={e => this.handleUpload(e)}\\r\\n          style={{\\r\\n            cursor: \\\"pointer\\\",\\r\\n            position: \\\"absolute\\\",\\r\\n            top: 0,\\r\\n            bottom: 0,\\r\\n            right: 0,\\r\\n            left: 0,\\r\\n            width: \\\"100%\\\",\\r\\n            opacity: 0\\r\\n          }}\\r\\n        />\\r\\n\\r\\n      </FlatButton>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\"]}",
headerContent: undefined,
mtime: 1504048888757,
devLibsRequired : undefined
};