module.exports = { contents: "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Slider_1 = require(\"material-ui/Slider\");\r\nvar React = require(\"react\");\r\nvar play_arrow_1 = require(\"material-ui/svg-icons/av/play-arrow\");\r\nvar pause_1 = require(\"material-ui/svg-icons/av/pause\");\r\nvar constants_1 = require(\"./constants\");\r\nvar IconStyles = { width: 100, height: 100, display: \"inline-block\" };\r\nvar PlayPause = function (isPlaying) {\r\n    if (isPlaying) {\r\n        return (React.createElement(pause_1.default, { color: constants_1.colors.controls, style: { width: 100, height: 100, display: \"inline-block\", padding: 0 } }));\r\n    }\r\n    else {\r\n        return (React.createElement(play_arrow_1.default, { color: constants_1.colors.controls, style: { width: 100, height: 100, display: \"inline-block\", padding: 0 } }));\r\n    }\r\n};\r\nexports.Controls = function (props) {\r\n    return (React.createElement(\"div\", { style: {\r\n            display: \"flex\",\r\n            alignContent: \"center\",\r\n            justifyContent: \"center\"\r\n        } },\r\n        React.createElement(\"div\", null,\r\n            props.isPlaying &&\r\n                React.createElement(pause_1.default, { onClick: function (e) { return props.togglePlay(e.target.value); }, color: constants_1.colors.controls, style: IconStyles }),\r\n            !props.isPlaying &&\r\n                React.createElement(play_arrow_1.default, { onClick: function (e) { return props.togglePlay(e.target.value); }, color: constants_1.colors.controls, style: IconStyles }),\r\n            React.createElement(Slider_1.default, { style: { width: \"50vw\", display: \"inline-block\", height: \"83px\" }, min: 0, max: props.nTimePoints, step: 1, value: props.time, onChange: function (event, value) {\r\n                    props.changeTime(value);\r\n                } }),\r\n            React.createElement(\"div\", { style: {\r\n                    color: constants_1.colors.neuronInActive,\r\n                    textAlign: \"center\",\r\n                    fontSize: \"16pt\"\r\n                } },\r\n                props.time,\r\n                \" / \",\r\n                props.nTimePoints,\r\n                \" \"))));\r\n};\r\n//# sourceMappingURL=Controls.js.map",
dependencies: ["material-ui/Slider","react","material-ui/svg-icons/av/play-arrow","material-ui/svg-icons/av/pause","./constants"],
sourceMap: "{\"version\":3,\"file\":\"Controls.jsx\",\"sourceRoot\":\"\",\"sources\":[\"/src/Controls.tsx\"],\"names\":[],\"mappings\":\";;AAAA,6CAAwC;AAExC,6BAA+B;AAC/B,kEAA4D;AAC5D,wDAAmD;AAEnD,yCAAqC;AASrC,IAAM,UAAU,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;AAExE,IAAM,SAAS,GAAG,UAAA,SAAS;IACzB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACd,MAAM,CAAC,CACL,oBAAC,eAAK,IACJ,KAAK,EAAE,kBAAM,CAAC,QAAQ,EACtB,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,EAAE,GACvE,CACH,CAAC;IACJ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,CACL,oBAAC,oBAAS,IACR,KAAK,EAAE,kBAAM,CAAC,QAAQ,EACtB,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,EAAE,GACvE,CACH,CAAC;IACJ,CAAC;AACH,CAAC,CAAC;AAEW,QAAA,QAAQ,GAA4B,UAAC,KAAmB;IACnE,MAAM,CAAC,CACL,6BACE,KAAK,EAAE;YACL,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,QAAQ;YACtB,cAAc,EAAE,QAAQ;SACzB;QAED;YACG,KAAK,CAAC,SAAS;gBACd,oBAAC,eAAK,IACJ,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAhC,CAAgC,EAC9C,KAAK,EAAE,kBAAM,CAAC,QAAQ,EACtB,KAAK,EAAE,UAAU,GACjB;YACH,CAAC,KAAK,CAAC,SAAS;gBACf,oBAAC,oBAAS,IACR,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAhC,CAAgC,EAC9C,KAAK,EAAE,kBAAM,CAAC,QAAQ,EACtB,KAAK,EAAE,UAAU,GACjB;YACJ,oBAAC,gBAAM,IACL,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,EACjE,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,KAAK,CAAC,WAAW,EACtB,IAAI,EAAE,CAAC,EACP,KAAK,EAAE,KAAK,CAAC,IAAI,EACjB,QAAQ,EAAE,UAAC,KAAK,EAAE,KAAK;oBACrB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC,GACD;YACF,6BACE,KAAK,EAAE;oBACL,KAAK,EAAE,kBAAM,CAAC,cAAc;oBAC5B,SAAS,EAAE,QAAQ;oBACnB,QAAQ,EAAE,MAAM;iBACjB;gBAEA,KAAK,CAAC,IAAI;;gBAAK,KAAK,CAAC,WAAW;gBAAE,GAAG,CAClC,CACF,CACF,CACP,CAAC;AACJ,CAAC,CAAC\",\"sourcesContent\":[\"import Slider from \\\"material-ui/Slider\\\";\\r\\nimport IconButton from \\\"material-ui/IconButton\\\";\\r\\nimport * as React from \\\"react\\\";\\r\\nimport PlayArrow from \\\"material-ui/svg-icons/av/play-arrow\\\";\\r\\nimport Pause from \\\"material-ui/svg-icons/av/pause\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { colors } from \\\"./constants\\\";\\r\\ninterface ControlProps {\\r\\n  time: number;\\r\\n  togglePlay: Function;\\r\\n  changeTime: Function;\\r\\n  isPlaying: boolean;\\r\\n  nTimePoints: number;\\r\\n}\\r\\n\\r\\nconst IconStyles = { width: 100, height: 100, display: \\\"inline-block\\\" };\\r\\n\\r\\nconst PlayPause = isPlaying => {\\r\\n  if (isPlaying) {\\r\\n    return (\\r\\n      <Pause\\r\\n        color={colors.controls}\\r\\n        style={{ width: 100, height: 100, display: \\\"inline-block\\\", padding: 0 }}\\r\\n      />\\r\\n    );\\r\\n  } else {\\r\\n    return (\\r\\n      <PlayArrow\\r\\n        color={colors.controls}\\r\\n        style={{ width: 100, height: 100, display: \\\"inline-block\\\", padding: 0 }}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n};\\r\\n\\r\\nexport const Controls: React.SFC<ControlProps> = (props: ControlProps) => {\\r\\n  return (\\r\\n    <div\\r\\n      style={{\\r\\n        display: \\\"flex\\\",\\r\\n        alignContent: \\\"center\\\",\\r\\n        justifyContent: \\\"center\\\"\\r\\n      }}\\r\\n    >\\r\\n      <div>\\r\\n        {props.isPlaying &&\\r\\n          <Pause\\r\\n            onClick={e => props.togglePlay(e.target.value)}\\r\\n            color={colors.controls}\\r\\n            style={IconStyles}\\r\\n          />}\\r\\n        {!props.isPlaying &&\\r\\n          <PlayArrow\\r\\n            onClick={e => props.togglePlay(e.target.value)}\\r\\n            color={colors.controls}\\r\\n            style={IconStyles}\\r\\n          />}\\r\\n        <Slider\\r\\n          style={{ width: \\\"50vw\\\", display: \\\"inline-block\\\", height: \\\"83px\\\" }}\\r\\n          min={0}\\r\\n          max={props.nTimePoints}\\r\\n          step={1}\\r\\n          value={props.time}\\r\\n          onChange={(event, value) => {\\r\\n            props.changeTime(value);\\r\\n          }}\\r\\n        />\\r\\n        <div\\r\\n          style={{\\r\\n            color: colors.neuronInActive,\\r\\n            textAlign: \\\"center\\\",\\r\\n            fontSize: \\\"16pt\\\"\\r\\n          }}\\r\\n        >\\r\\n          {props.time} / {props.nTimePoints}{\\\" \\\"}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\"]}",
headerContent: undefined,
mtime: 1502842731526,
devLibsRequired : undefined
};